apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          env:
            - name: POSTGRES_PASSWORD
              value: "postgres"
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-init-script
              mountPath: /docker-entrypoint-initdb.d/init.sql
              subPath: init.sql
      volumes:
        - name: postgres-init-script
          configMap:
            name: postgres-init
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
data:
  init.sql: |
    insert into role values (1, 'ADMIN');
    insert into configuser (first_name, last_name, email, password, role_id, refresh_token, token_created, token_expires)
    values ('test', 'test', 'test', '$2a$11$TxzkGMQgywQjBxMq9YcOoO66hQODh5zJzIg4npGPDzfpcefvKORD2', 1, 'refresh_token_value', current_timestamp, current_timestamp + interval '7 days');
---
apiVersion: v1
kind: Service
metadata:
  name: herbert-backend-service
spec:
  selector:
    app: herbert-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30011 
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  type: NodePort
  ports:
    - port: 5432
      targetPort: 5432
      nodePort: 30007
  selector:
    app: postgres
